strip.text = element_text(face = "bold.italic", size=10))
# get abundance in %
psmerge <- transform_sample_counts(psmerge, function(x) x/sum(x))
psmerge
dfmerge <- psmelt(psmerge)
dfmerge[dfmerge$Genus != "Wolbachia" | dfmerge$Genus != "Spiroplasma",]$Genus
dfmerge[dfmerge$Genus != "Wolbachia" | dfmerge$Genus != "Spiroplasma",]$Genus <- 'Others'
dfmerge[dfmerge$Genus != "Wolbachia" | dfmerge$Genus != "Spiroplasma",]$Genus
dfmerge[dfmerge$Genus != "Wolbachia" | dfmerge$Genus != "Spiroplasma",]$Genus <- 'Others'
dfmerge[dfmerge$Genus != "Wolbachia" | dfmerge$Genus != "Spiroplasma",]$Genus <- as.factor('Others')
dfmerge[dfmerge$Genus != "Wolbachia" | dfmerge$Genus != "Spiroplasma",]$Genus <- NA
dfmerge$new_genus <- as.character(dfmerge$Genus)
dfmerge[dfmerge$new_genus != "Wolbachia" | dfmerge$new_genus != "Spiroplasma",]$Genus <- "Other"
dfmerge$new_genus
dfmerge[dfmerge$new_genus == NA, ]$new_genus
dfmerge[dfmerge$new_genus == NA, ]$new_genus <- "na"
dfmerge$new_genus[is.na(dfmerge$new_genus)]
dfmerge$new_genus[is.na(dfmerge$new_genus)] <- "na"
dfmerge[dfmerge$new_genus != "Wolbachia" | dfmerge$new_genus != "Spiroplasma",]$Genus <- "Other"
dfmerge[dfmerge$new_genus != "Wolbachia" | dfmerge$new_genus != "Spiroplasma",]$new_genus <- "Other"
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20")
# get abundance in %
psmerge <- transform_sample_counts(psmerge, function(x) x/sum(x))
dfmerge <- psmelt(psmerge)
dfmerge$new_genus <- as.character(dfmerge$Genus)
dfmerge$new_genus[is.na(dfmerge$new_genus)] <- "na"
dfmerge[dfmerge$new_genus != "Wolbachia" & dfmerge$new_genus != "Spiroplasma",]$new_genus <- "Other"
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20")
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20") +
coord_flip()
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
coord_flip()
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
coord_flip()+
geom_bar(stat = "identity")
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
coord_flip()+
theme_minimal()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20")
ggplot(dfmerge, aes(x=species, y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
coord_flip()+
theme_minimal()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20")
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
coord_flip()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20")
ggplot(dfmerge, aes(x=reorder_within(id, -Abundance, species), y=Abundance, fill=new_genus))+
facet_grid(~species, scales="free_x", space="free_x")+
theme_minimal()+
coord_flip()+
geom_bar(stat = "identity")+
scale_fill_tableau(palette="tableau20")
guides(fill=guide_legend(title = NULL, nrow=3))+
theme(axis.text.x = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.spacing.y= margin(t = -5),
panel.spacing.x=unit(0.15, "lines"),
#panel.margin.y = unit(-2, "lines"),
strip.text.x = element_text(size = 11, angle=90, face="italic", vjust=0),
legend.position = "bottom",
axis.ticks.y = element_line(),
legend.margin=margin(t = -0.5, unit='cm'))+
scale_y_continuous(breaks=seq(0,0.85,0.05), labels=seq(0,85,5))+
scale_x_reordered()+
geom_hline(yintercept = 0.97, size=1)
load("~/Documents/WD/quillmites/all/R/16S.V4.quillmites_NEW.RData")
require(phyloseq)
ps
# Bar plots for most frequent taxa----
# create vector with names of most frequent taxa, extract those taxa from phyloseq object
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:58]
ps.top20 <- prune_taxa(top20, ps1.red.trans)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
# Bar plots for most frequent taxa----
# create vector with names of most frequent taxa, extract those taxa from phyloseq object
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:60]
ps.top20 <- prune_taxa(top20, ps1)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
names(table(df.top20$Genus))[1:10]
# Bar plots for most frequent taxa----
# create vector with names of most frequent taxa, extract those taxa from phyloseq object
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:20]
ps.top20 <- prune_taxa(top20, ps1)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))[1:10]
names(table(df.top20$Genus))
# Bar plots for most frequent taxa----
# create vector with names of most frequent taxa, extract those taxa from phyloseq object
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:10]
ps.top20 <- prune_taxa(top20, ps1)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
names(table(df.top20$Genus))
# Bar plots for most frequent taxa----
# create vector with names of most frequent taxa, extract those taxa from phyloseq object
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:11]
ps.top20 <- prune_taxa(top20, ps1)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:12]
ps.top20 <- prune_taxa(top20, ps1)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:13]
ps.top20 <- prune_taxa(top20, ps1)
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
df.1
df1
df1.trans  <- psmelt(ps1.trans)
filter(df1.trans, Genus=="Spiroplasma"
)
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
filter(df1.trans, Genus=="Spiroplasma")
filter(df1.trans, Genus=="Bartonella")
filter(df1.trans, Genus=="Bartonella") %>% group_by(id)
filter(df1.trans, Genus=="Bartonella") %>% group_by(.id)
filter(df1.trans, Genus=="Bartonella") %>% group_by(id) %>% summarise(sum=n_distinct(species))
filter(df1.trans, Genus=="Bartonella") %>% group_by(id) %>% summarise(mean=mean(Aubundance))
filter(df1.trans, Genus=="Bartonella") %>% group_by(id) %>% summarise(mean=mean(Abundance))
filter(df1.trans, Genus=="Bartonella") %>% group_by(id)
filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species) %>% summarise(mean=mean(Abundance))
filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species)
filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species) %>% filter(Abundance > 0)
filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species) %>% filter(Abundance > 0)
filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species) %>% filter(Abundance > 0)
new <- filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species) %>% filter(Abundance > 0)
new$species
filter(df1.trans, Genus=="Bartonella") %>% group_by(id, species) %>% filter(Abundance > 0)
filter(df1.trans, Genus=="Brucella") %>% group_by(id, species) %>% filter(Abundance > 0)
new <- filter(df1.trans, Genus=="Brucella") %>% group_by(id, species) %>% filter(Abundance > 0)
new
filter(df1.trans, Genus=="Brucella") %>% group_by(id, species) %>% filter(Abundance > 0) %>% summarise(mean=mean(Abundance))
filter(df1.trans, Genus=="Brucella")  %>% filter(Abundance > 0) %>% summarise(mean=mean(Abundance))
new
new <- filter(df1.trans, Genus=="Spiroplasma") %>% group_by(id, species) %>% filter(Abundance > 0) %>% summarise(mean=mean(Abundance))
new
new <- filter(df.trans, Genus=="Spiroplasma") %>% group_by(id, species) %>% filter(Abundance > 0) %>% summarise(mean=mean(Abundance))
new
new <- filter(df.trans, Genus=="Spiroplasma") %>% group_by(id, species, OTU) %>% filter(Abundance > 0) %>% summarise(mean=mean(Abundance))
uniq(new$OTU)
uniqe(new$OTU)
new$OTU
# Bar plots for most frequent taxa----
# create vector with names of most frequent taxa, extract those taxa from phyloseq object
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:13]
ps.top20 <- prune_taxa(top20, ps1)
ps.top20
# create dataframe for plotting
df.top20 <- psmelt(ps.top20)
names(table(df.top20$Genus))
df.filt$host.species
new
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:50]
ps.top20 <- prune_taxa(top20, ps1)
df1.trans  <- psmelt(ps.top20)
names(df1.trans)
df.top20  <- psmelt(ps.top20)
names(table(df.top20$Genus))
length(names(table(df.top20$Genus)))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:30]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
length(names(table(df.top20$Genus)))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:28]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
length(names(table(df.top20$Genus)))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:27]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
length(names(table(df.top20$Genus)))
names_genus <- names(table(df.top20$Genus))
filter(df.trans, Genus %in% names_genus)
filter(df.trans, Genus %in% names_genus) %>% summarise(sum=sum(Abundance))
ggplot(df.birds, aes(x= host.genus, y = Abundance)) +
geom_boxplot(fill = NA, color="#39737C") +
geom_point(size = 1, alpha = 0.5, position = position_jitter(width = 0.3), color="#39737C") +
scale_y_log10()+
coord_flip()+
facet_grid(~Family, scales="free")+
theme_minimal()+
theme(axis.text.x.top = element_blank(),
axis.text.y = element_text(face="italic", size=10),
axis.text.x = element_text(size=8, angle=270, vjust=0.5, hjust=0),
axis.title = element_blank(),
axis.ticks.x = element_line(),
panel.grid = element_blank(),
panel.spacing.x=unit(1, "lines"),
legend.position = "none",
strip.text = element_text(face = "bold", size=10))
filter(df.trans, Genus %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
new <- filter(df.trans, Genus %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
qplot(new)
qplot(new$sum)+geom_histogram()
mean(new$sum)
names_genus <- names(table(df.top20$Family))
names_genus
length(names(table(df.top20$Family)))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:32]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:33]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:34]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
new <- filter(df.trans, Genus %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
mean(new$sum)
new <- filter(df.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
mean(new$sum)
new$sum
qplot(new$sum)+geom_histogram()
mean(new$sum)
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:34]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
new <- filter(df1.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
mean(new$sum)
qplot(new$sum)+geom_histogram()
ps1.trans <- subset_taxa(ps.trans, Genus != "Wolbachia" & Genus != "Spiroplasma")
ps1 <- subset_taxa(ps, Genus != "Wolbachia" & Genus != "Spiroplasma")
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:34]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
new <- filter(df1.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
mean(new$sum)
filter(df1.trans, Family %in% names_genus) %>% group_by(id)
filter(df1.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
filter(df1.trans, Family %in% names_genus) %>% group_by(id)
df1.trans
df1.trans<- psmelt(ps1.trans)
new <- filter(df1.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
mean(new$sum)
qplot(new$sum)+geom_histogram()
top20 <- names(sort(taxa_sums(ps1), decreasing=TRUE))[1:34]
ps.top20 <- prune_taxa(top20, ps1)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
df1.trans<- psmelt(ps1.trans)
new <- filter(df1.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
mean(new$sum)
qplot(new$sum)+geom_histogram()
median(new$sum)
length(new$sum)
top20 <- names(sort(taxa_sums(ps1.trans), decreasing=TRUE))[1:34]
ps.top20 <- prune_taxa(top20, ps1.trans)
df.top20  <- psmelt(ps.top20)
names_genus <- names(table(df.top20$Family))
length(names(table(df.top20$Family)))
new <- filter(df1.trans, Family %in% names_genus) %>% group_by(id) %>% summarise(sum=sum(Abundance))
length(new$sum)
qplot(new$sum)+geom_histogram()
filter(df1.trans, Family %in% names_genus)  %>% summarise(sum=sum(Abundance))
new <- filter(df1.trans, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(Abundance))
filter(df1.trans, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(Abundance))
df1.trans %>% group_by(id) %>% summarise(sum=sum(Abundance))
df1 %>% group_by(id) %>% summarise(sum=sum(Abundance))
df %>% group_by(id) %>% summarise(sum=sum(Abundance))
dftrans <- psmelt(ps1.trans)
new <- dftrans %>% group_by(id) %>% summarise(sum=sum(Abundance))
new
df %>% group_by(id) %>% summarise(sum=sum(Abundance))
df %>% filter(Family %in% names_genus) group_by(id) %>% summarise(sum=sum(Abundance))
filter(df, Family %in% names_genus) group_by(id) %>% summarise(sum=sum(Abundance))
filter(df1, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(Abundance))
filter(df, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(Abundance))
new <- filter(df, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(Abundance))
length(new$sum)
qplot(new$sum)+geom_histogram()
filter(df, Family %in% names_genus)
filter(df, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(read.count))
sum(new$sum)
sum(df$read.count)
new$sum
new <- filter(df, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(read.count))
new
sum(new$sum)
sum(df$read.count)
sum(new$sum)/sum(df$read.count)
new <- filter(df1, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(read.count))
df1 <- psmelt(ps1)
new <- filter(df1, Family %in% names_genus)  %>% group_by(id) %>% summarise(sum=sum(read.count))
sum(new$sum)/sum(df1$read.count)
# perform adonis tests
df = as(sample_data(ps1.log), "data.frame")
d = distance(ps1.log, "bray")
qmadonis <- adonis(d ~ species, df)
library("vegan", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
qmadonis <- adonis(d ~ species, df)
qmadonis
qmadonis <- adonis(d ~ host.genus, df)
qmadonis
qmadonis <- adonis(d ~ stage, df)
qmadonis <- adonis(d ~ stage.simple, df)
d
df
qmadonis <- adonis(d ~ stage2, df)
qmadonis <- adonis(d ~ stage2, df)
qmadonis <- adonis(d ~ stage1, df)
qmadonis
qmadonis <- adonis(d ~ host.species, df)
qmadonis
df
qmadonis <- adonis(d ~ Wolbachia, df)
qmadonis
qmadonis <- adonis2(d ~ Wolbachia, df)
qmadonis
d = vegdist(ps1.log, "bray")
ps1.log
d = distance(ps1.log, "jsd")
qmadonis <- adonis2(d ~ Wolbachia, df)
qmadonis
qmadonis <- adonis2(d ~ host.genus, df)
qmadonis
qmadonis <- adonis2(d ~ genus, df)
qmadonis
# perform adonis tests
df = as(sample_data(ps1.red.log), "data.frame")
d = distance(ps1.log, "jsd")
d = distance(ps1.red.log, "jsd")
qmadonis <- adonis2(d ~ genus, df)
qmadonis
library(ape)
library(ggtree)
tree <- read.tree("((wAu_wAu_00355:0.00249648,(wMel_wMel_00929:0.00116078,((wAu_wAu_00934:0.00639588,wAu_wAu_00354:0.00293564):0.0128905,((((wOc_wOc_00263:0.0852873,wOc_wOc_00265:0.0135056):0.152996,(wPni_wPni_00939:0.0590147,((wOc_wOc_00266:0.0114185,wFol_wFol_01059:0.156926):0.175014,(((wRi_wRi_00698:0.0700154,(((wMel_wMel_00271:0.00343842,((wHa_wHa_00281:0.00363993,wHa_wHa_00388:0.00179005):0.00218244,wHa_wHa_00608:0.00232272):0.00671878):0.00102544,wAu_wAu_00635:0.00396667):0.00855567,((wHa_wHa_00607:0.00535169,wHa_wHa_00282:0.00251939):0.0102741,wHa_wHa_00387:0.00666341):0.0121261):0.0731895):0.0183154,((((wRi_wRi_01316:0.00229419,wRi_wRi_00614:0.000291859):0.00093852,wRi_wRi_01122:0.00451403):0.00283735,wRi_wRi_01117:0.000721657):0.00399209,(wRi_wRi_00269:0.00125627,(((wRi_wRi_00106:0.000236021,(wRi_wRi_01219:0.0298616,((wRi_wRi_01218:0.00129706,wRi_wRi_00663:0.0020849):0.00494132,(wRi_wRi_00621:0.000558217,((wRi_wRi_00800:1.16165e-05,wRi_wRi_00403:0.0046356):0.000739859,(wRi_wRi_00261:0.000128258,(wRi_wRi_00639:0.00993458,wRi_wRi_01032:0.00129784):0.000326206):0.0006142):0.000121881):0.00114409):0.00352089):0.00379582):0.00184773,(((wRi_wRi_00472:0.00135292,(wRi_wRi_00753:0.0113453,wRi_wRi_00481:0.000673688):0.00157968):0.00160071,wRi_wRi_00754:0.0010275):0.00301667,(wRi_wRi_01113:0.00336225,wRi_wRi_01367:0.0128352):0.00112777):0.00714651):0.000106619,wRi_wRi_00421:0.00547681):0.00135349):0.00537805):0.0504019):0.528624,wOc_wOc_00264:0.0804561):0.135307):0.045146):0.0540385):0.0347995,((wFol_wFol_01155:0.00131665,(wFol_wFol_00287:0.00271711,((wFol_wFol_01360:0.000324645,wFol_wFol_00269:0.031893):0.0206942,((wFol_wFol_00655:0.00133655,wFol_wFol_00349:0.018629):0.000669058,wFol_wFol_01385:0.0168831):0.00038426):0.0159549):0.001746):0.00415489,(wFol_wFol_00539:0.00121942,((wFol_wFol_00483:0.00326614,((((wFol_wFol_00400:0.00554813,wFol_wFol_01384:7.18711e-06):0.00188701,wFol_wFol_00163:0.000176726):0.00343865,wFol_wFol_00701:0.00011112):0.00240315,wFol_wFol_00544:0.00334668):0.0066996):0.00299669,((wFol_wFol_00594:0.00243217,wFol_wFol_00561:0.00166079):0.00364517,(((((wFol_wFol_00540:0.00340117,(wFol_wFol_00593:0.00193911,wFol_wFol_00348:0.01625):0.00125079):0.00175308,wFol_wFol_00286:0.00100607):0.000561164,wFol_wFol_00401:0.0154754):0.00498706,wFol_wFol_01156:0.00208501):0.00608259,wFol_wFol_00484:0.0031236):0.0239322):0.00284154):0.00255493):0.00153306):0.0274558):0.0234123,(wRi_wRi_00938:0.00494772,(((wHa_wHa_00903:0.00605589,wRi_wRi_00474:0.00843326):0.00209188,wHa_wHa_00574:0.00236676):0.0126297,wRi_wRi_00191:0.00286953):0.00955217):0.0422359):0.0025009):0.00638923):0.0368893):0.000807367,((wRi_wRi_00475:6.36635e-06,wRi_wRi_00473:0.00935551):1.8256e-05,((wRi_wRi_00192:0.00263879,(((wRi_wRi_00937:0.00642416,wHa_wHa_00575:0.00906406):0.00186806,(wHa_wHa_00904:0.00139915,(wHa_wHa_00902:0.00304317,wRi_wRi_00939:0.00281993):0.00318454):0.00211604):0.00187035,wHa_wHa_00573:0.0110025):0.00310677):0.00476272,wRi_wRi_00190:0.00741508):0.00132778):0.000320241,(wAu_wAu_00935:0.00598091,wMel_wMel_00928:0.000180294):0.0200805);
")
tree <- read.tree(text="((wAu_wAu_00355:0.00249648,(wMel_wMel_00929:0.00116078,((wAu_wAu_00934:0.00639588,wAu_wAu_00354:0.00293564):0.0128905,((((wOc_wOc_00263:0.0852873,wOc_wOc_00265:0.0135056):0.152996,(wPni_wPni_00939:0.0590147,((wOc_wOc_00266:0.0114185,wFol_wFol_01059:0.156926):0.175014,(((wRi_wRi_00698:0.0700154,(((wMel_wMel_00271:0.00343842,((wHa_wHa_00281:0.00363993,wHa_wHa_00388:0.00179005):0.00218244,wHa_wHa_00608:0.00232272):0.00671878):0.00102544,wAu_wAu_00635:0.00396667):0.00855567,((wHa_wHa_00607:0.00535169,wHa_wHa_00282:0.00251939):0.0102741,wHa_wHa_00387:0.00666341):0.0121261):0.0731895):0.0183154,((((wRi_wRi_01316:0.00229419,wRi_wRi_00614:0.000291859):0.00093852,wRi_wRi_01122:0.00451403):0.00283735,wRi_wRi_01117:0.000721657):0.00399209,(wRi_wRi_00269:0.00125627,(((wRi_wRi_00106:0.000236021,(wRi_wRi_01219:0.0298616,((wRi_wRi_01218:0.00129706,wRi_wRi_00663:0.0020849):0.00494132,(wRi_wRi_00621:0.000558217,((wRi_wRi_00800:1.16165e-05,wRi_wRi_00403:0.0046356):0.000739859,(wRi_wRi_00261:0.000128258,(wRi_wRi_00639:0.00993458,wRi_wRi_01032:0.00129784):0.000326206):0.0006142):0.000121881):0.00114409):0.00352089):0.00379582):0.00184773,(((wRi_wRi_00472:0.00135292,(wRi_wRi_00753:0.0113453,wRi_wRi_00481:0.000673688):0.00157968):0.00160071,wRi_wRi_00754:0.0010275):0.00301667,(wRi_wRi_01113:0.00336225,wRi_wRi_01367:0.0128352):0.00112777):0.00714651):0.000106619,wRi_wRi_00421:0.00547681):0.00135349):0.00537805):0.0504019):0.528624,wOc_wOc_00264:0.0804561):0.135307):0.045146):0.0540385):0.0347995,((wFol_wFol_01155:0.00131665,(wFol_wFol_00287:0.00271711,((wFol_wFol_01360:0.000324645,wFol_wFol_00269:0.031893):0.0206942,((wFol_wFol_00655:0.00133655,wFol_wFol_00349:0.018629):0.000669058,wFol_wFol_01385:0.0168831):0.00038426):0.0159549):0.001746):0.00415489,(wFol_wFol_00539:0.00121942,((wFol_wFol_00483:0.00326614,((((wFol_wFol_00400:0.00554813,wFol_wFol_01384:7.18711e-06):0.00188701,wFol_wFol_00163:0.000176726):0.00343865,wFol_wFol_00701:0.00011112):0.00240315,wFol_wFol_00544:0.00334668):0.0066996):0.00299669,((wFol_wFol_00594:0.00243217,wFol_wFol_00561:0.00166079):0.00364517,(((((wFol_wFol_00540:0.00340117,(wFol_wFol_00593:0.00193911,wFol_wFol_00348:0.01625):0.00125079):0.00175308,wFol_wFol_00286:0.00100607):0.000561164,wFol_wFol_00401:0.0154754):0.00498706,wFol_wFol_01156:0.00208501):0.00608259,wFol_wFol_00484:0.0031236):0.0239322):0.00284154):0.00255493):0.00153306):0.0274558):0.0234123,(wRi_wRi_00938:0.00494772,(((wHa_wHa_00903:0.00605589,wRi_wRi_00474:0.00843326):0.00209188,wHa_wHa_00574:0.00236676):0.0126297,wRi_wRi_00191:0.00286953):0.00955217):0.0422359):0.0025009):0.00638923):0.0368893):0.000807367,((wRi_wRi_00475:6.36635e-06,wRi_wRi_00473:0.00935551):1.8256e-05,((wRi_wRi_00192:0.00263879,(((wRi_wRi_00937:0.00642416,wHa_wHa_00575:0.00906406):0.00186806,(wHa_wHa_00904:0.00139915,(wHa_wHa_00902:0.00304317,wRi_wRi_00939:0.00281993):0.00318454):0.00211604):0.00187035,wHa_wHa_00573:0.0110025):0.00310677):0.00476272,wRi_wRi_00190:0.00741508):0.00132778):0.000320241,(wAu_wAu_00935:0.00598091,wMel_wMel_00928:0.000180294):0.0200805);
")
tree
plot(tree)
library(ggplot2)
ggtree(tree)
ggtree(tree)+geom_point2()
ggtree(tree)+geom_point2(size=0.5)
ggtree(tree)+geom_point2(size=0.2)
shiny::runApp('Documents/Rscripts/pbplot')
runApp('Documents/Rscripts/pbplot')
install.packages("LaplacesDemon")
runApp('Documents/Rscripts/pbplot')
runApp('Documents/Rscripts/pbplot')
setwd("~/Desktop/stefanos")
trace1 <- read.table("core.1.trace", sep="\t", header=T, comment.char = "")
trace1
trace1[4]
ESS(trace1[4])
results <- matrix(ncol=1, nrow=length(names))
length(names)-4
runApp('~/Documents/Rscripts/pbplot')
results <- matrix(ncol=1, nrow=7)
results
for (i in 4:11){
results[1,i]<- ESS(trace[i])
}
for (i in 4:11){
results[i,1]<- ESS(trace[i])
}
runApp('~/Documents/Rscripts/pbplot')
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
}
results <- matrix(ncol=1, nrow=11)
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
}
results
as.data.frame(results)
as.data.frame(results[4:11,])
runApp('~/Documents/Rscripts/pbplot')
as.data.frame(results[4:11,])
runApp('~/Documents/Rscripts/pbplot')
setwd("~/Documents/Rscripts/pbplot")
runApp()
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
results <- matrix(ncol=1, nrow=11)
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
}
as.data.frame(results[4:11,])
runApp()
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
results <- matrix(ncol=1, nrow=11)
colnames(results) <-
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
}
plottable <- as.data.frame(results[4:11,])
plottable
colnames(results) <- names(trace1)
names(trace1)
colnames(results)
results
col.names(results) <- names(trace1)
colnames(results) <- names(trace1)
rownames(results) <- names(trace1)
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
}
plottable <- as.data.frame(results[4:11,])
plottable
))
results <- matrix(ncol=1, nrow=11)
rownames(results) <- names(trace1)
for (i in 4:11){
results[i,1]<- ESS(trace1[i])
}
plottable <- as.data.frame(results[4:11,])
plottable
results <- matrix(ncol=1, nrow=11)
rownames(results) <- names(trace1)
results
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
ESS(trace1[5])
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
ESS(trace1)
str(ESS(trace1))
as.data.frame(ESS(trace1)))
as.data.frame(ESS(trace1))
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
as.data.frame(ESS(trace1))
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
burnin <- nrow(trace1)/100*25
trace1 <- trace1[burnin+1:nrow(trace1), ]
as.data.frame(ESS(trace1))
ESS(trace1)
as.data.frame(ESS(trace1$loglik))
runApp()
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
burnin <- nrow(trace1)/100*25
trace1 <- trace1[burnin+1:nrow(trace1), ]
burnin
trace1[burnin+1:nrow(trace1), ]
as.data.frame(ESS(trace1$loglik))
trace1[5000+1:nrow(trace1), ]
trace1 <- trace1[5000+1:nrow(trace1), ]
trace1
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
nrow(trace1)
nrow(trace1)/100*25
burnin <- nrow(trace1)/100*25
nrow(trace1)
5000+1
trace1[5000+1:nrow(trace1), ]
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
trace1[5000+1:nrow(trace1), ]
trace1 <- trace1[5000+1:nrow(trace1), ]
trace1 <- trace1[20000:nrow(trace1), ]
trace1 <- trace1[1000:nrow(trace1), ]
trace1 <- read.table("~/Desktop/stefanos/core.1.trace", sep="\t", header=T, comment.char = "")
trace1 <- trace1[1000:nrow(trace1), ]
as.data.frame(ESS(trace1$loglik))
runApp()
colMeans(trace1)
as.data.frame(colMeans(trace1))
runApp()
install.packages("matrixStats")
runApp()
