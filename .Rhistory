df.trans %>% group_by(species, host.species) %>% summarize(count = n_distinct(id))
write.table("test.csv", df.trans %>% group_by(species, host.species) %>% summarize(count = n_distinct(id)))
install.packages("rtweet")
require(devtools)
install_github("lchiffon/wordcloud2")
library(tidytext)
install.packages("tidytext")
library(tidytext)
library(dplyr)
library(stringr)
library(rtweet)
library(wordcloud2)
create_token(
app = "wordcloud-app",
consumer_key = "z96ZeSCUJtpmSyn7UJSQ19Ndc",
consumer_secret = "YORx0EVEkDtuTV3PqFBmI8hGyqoUyTB7LCBxsN5kBSGZUbUtNv")
wolb <- search_tweets(
"#Wolbachia2018", include_rts = FALSE
)
wolb
wolb <- search_tweets(
"#wolbachia2018", include_rts = FALSE
)
wolb
wolb <- search_tweets(
"#wolbachia2018", include_rts = FALSE, n=10000
)
wolb
me <- get_timeline(gerth_micha, n=1000)
me <- get_timeline("gerth_micha", n=1000)
me
me <- get_timeline("gerth_micha", n=1000, include_rts = FALSE)
me
wolb <- search_tweets(
"#wolbachia2018", n=10000
)
wolb
#Unnest the words - code via Tidy Text
wolbTable <- wolb %>%
unnest_tokens(word, text)
wolbTable
#remove stop words - aka typically very common words such as "the", "of" etc
data(stop_words)
#remove stop words - aka typically very common words such as "the", "of" etc
data(stop_words)
wolbTable <- wolbTable %>%
anti_join(stop_words)
#do a word count
wolbTable <- wolbTable %>%
count(word, sort = TRUE)
wolbTable
#Remove other nonsense words
hmtTable <-hmtTable %>%
filter(!word %in% c('t.co', 'https', 'amp', 'wolbachia2018', 'watch'))
#Remove other nonsense words
wolbTable <-wolbTable %>%
filter(!word %in% c('t.co', 'https', 'amp', 'wolbachia2018', 'watch'))
wolbTable
wolb <- search_tweets(
"#wolbachia2018", n=10000, include_rts = F
)
#Unnest the words - code via Tidy Text
wolbTable <- wolb %>%
unnest_tokens(word, text)
#remove stop words - aka typically very common words such as "the", "of" etc
data(stop_words)
wolbTable <- wolbTable %>%
anti_join(stop_words)
#do a word count
wolbTable <- wolbTable %>%
count(word, sort = TRUE)
wolbTable
#Remove other nonsense words
wolbTable <-wolbTable %>%
filter(!word %in% c('t.co', 'https', 'amp', 'wolbachia2018', 'watch'))
wolbTable
wordcloud2(wolbTable, size=0.7)
wolbTable
wolb <- search_tweets(
"#wolbachia2018", n=10000, include_rts = F
)
#Unnest the words - code via Tidy Text
wolbTable <- wolb %>%
unnest_tokens(word, text)
#remove stop words - aka typically very common words such as "the", "of" etc
data(stop_words)
wolbTable <- wolbTable %>%
anti_join(stop_words)
#do a word count
wolbTable <- wolbTable %>%
count(word, sort = TRUE)
wolbTable
#Remove other nonsense words
wolbTable <-wolbTable %>%
filter(!word %in% c('t.co', 'https', 'amp', 'watch'))
wordcloud2(wolbTable, size=0.7)
wordcloud2(wolbTable, size=0.7)
wordcloud2(wolbTable, size=0.7)
wordcloud2(wolbTable, size=0.7)
wordcloud2(wolbTable, size=2)
me <- get_timeline("gerth_micha", n=1000, include_rts = FALSE)
#Unnest the words - code via Tidy Text
wolbTable <- me %>%
unnest_tokens(word, text)
#remove stop words - aka typically very common words such as "the", "of" etc
data(stop_words)
wolbTable <- wolbTable %>%
anti_join(stop_words)
#do a word count
wolbTable <- wolbTable %>%
count(word, sort = TRUE)
wolbTable
#Remove other nonsense words
wolbTable <-wolbTable %>%
filter(!word %in% c('t.co', 'https', 'amp', 'watch'))
wordcloud2(wolbTable, size=2)
#!/usr/bin/env Rscript
install.packages('shinyjqui')
shiny::runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
devtools::install_github("yang-tang/shinyjqui")
devtools::install_github("yang-tang/shinyjqui")
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
c(rep(1, 8))
rep(1, 8)
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
rep(10000, 8)
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
devtools::install_github("brennanpincardiff/drawProteins")
library(drawProteins)
library(ggplot2)
library(magrittr)
"Q04206 Q01201 Q04864 P19838 Q00653" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_data
prot_data
"A0A0C2HSQ0
A0A2P6FG76
A0A2P6FEB8
A0A220T578
A0A221HZJ4
A0A2H4YD46
A0A221HZJ5
A0A221HZH6
A0A2P6FEX5
A0A2P6F9833" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_data
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 A0A2P6FEX5 A0A2P6F9833" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_data
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 A0A2P6FEX5 A0A2P6F9833" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_data
prot_data
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 A0A2P6FEX5 A0A2P6F9833" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 " %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 " %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 A0A2P6FEX5 A0A2P6F9833" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 A0A2P6FEX5" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_new
p <- draw_canvas(prot_data)
p
p <- draw_chains(p, prot_data)
p
"A0A0C2HSQ0 A0A2P6FG76 A0A2P6FEB8 A0A220T578 A0A221HZJ4 A0A2H4YD46 A0A221HZJ5 A0A221HZH6 A0A2P6FEX5" %>%
drawProteins::get_features() %>%
drawProteins::feature_to_dataframe() ->
prot_data
p <- draw_canvas(prot_data)
p <- draw_chains(p, prot_data)
p <- draw_domains(p, prot_data)
p
p <- draw_domains(p, prot_data)
p
p <- draw_repeat(p, prot_data)
p <- draw_motif(p, prot_data)
p <- draw_phospho(p, prot_data, size = 8)
p
prot_data
library(ggmap)
africa <- get_map("Africa")
shiny::runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
install.packages("batchmeans")
runApp('Documents/R/pbplot')
core1 <- read.table("~/Desktop/core.1.trace", sep="\t", header=T, comment.char = ""))
core1 <- read.table("~/Desktop/core.1.trace", sep="\t", header=T, comment.char = "")
ess(core1$loglik)
ESS(core1$loglik)
ESS(core1$loglik, isme=F)
ESS(core1$loglik, imse=F)
ess(core1$loglik, imse=F)
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
library(LaplacesDemon)
trace1 <- read.table("~/Desktop/core.1.trace", sep="\t", header=T, comment.char = "")
trace1 <- read.table("~/Desktop/core.1.trace", sep="\t", header=T, comment.char = "")
trace2 <- read.table("~/Desktop/core.2.trace", sep="\t", header=T, comment.char = "")
cbind(trace1$loglik, trace2$loglik)
Geweke.Diagnostic(cbind(trace1$loglik, trace2$loglik))
shiny::runApp('Documents/R/pbplot')
biocLite("ggtree")
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
library(ape)
trees <- read.tree("~/Desktop/wolb1.treelist")
plot(trees[1])
trees
plot(trees[[1]])
plot(trees[[3]])
plot(trees[[5]])
plot(trees[[6]])
runApp('Documents/R/pbplot')
length(trees)
runApp('Documents/R/pbplot')
names(trees)
taxnames(trees)
library(ape)
trees
names(trees[[1]])
taxa(trees[[1]])
tip.label(trees[[1]])
library(ape)
tip.label(trees[[1]])
tiplabel(trees[[1]])
tiplabels(trees[[1]])
trees[[1]])$tip.label
trees[[1]]$tip.label
runApp('Documents/R/pbplot')
trees[[1]]$tip.label
runApp('Documents/R/pbplot')
list(trees[[1]]$tip.label)
length(trees[[1]]$tip.label)
tiplabels <- list()
for(i in 1:length(trees[[1]]$tip.label)){
tiplabels[[i]] <- trees[[1]]$tip.label[i]
}
tiplabels
runApp('Documents/R/pbplot')
length(trees)
str(length(trees))
as.numeric(length(trees)))
as.numeric(length(trees))
runApp('Documents/R/pbplot')
updateSelectInput
plot(trees[[1]])
root(plot(trees[[1]]))
plot(root(trees[[1]]))
as.numeric(length(trees), "wPni")
plot(root(trees[[1]]), "wPni")
plot(root(trees[[1]]), outgroup="wPni")
plot(root(trees[[1]], outgroup="wPni"))
runApp('Documents/R/pbplot')
tiplabels(trees[[1]])
trees[[1]]$tip.label
trees[[2]]$tip.label
trees[[3]]$tip.label
sort(trees[[3]]$tip.label)
runApp('Documents/R/pbplot')
sort(trees[[3]]$tip.label)
(trees[[3]]$tip.label
)
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
trees[[3]]
str(trees[[3]])
tree[[3]]$tip.label==c("wPni", "wPpen")
trees[[3]]$tip.label==c("wPni", "wPpen")
trees[[3]]$tip.label %in% c("wPni", "wPpen")
trees[[3]]$tip.label
colors <- trees[[3]]$tip.label %in% c("wPni", "wPpen")
colors[colors=FALSE]
colors[FALSE]
which(colors==FALSE)
which(colors==TRUE)
vector(length(trees[[3]]$tip.label))
vector(length=length(trees[[3]]$tip.label))
vector(mode="character", length=length(trees[[3]]$tip.label))
vector(data="black", length=length(trees[[3]]$tip.label))
ep("black", length=length(trees[[3]]$tip.label))
rep("black", length=length(trees[[3]]$tip.label))
colvec <- rep("black", length=length(trees[[3]]$tip.label))
colvec[which(colors==TRUE)]
colvec[which(colors==TRUE)]
colvec[which(colors==TRUE)] <- "red"
colvec
runApp('Documents/R/pbplot')
colors
colors <- trees[[700]]$tip.label %in% c("wPni", "wPpen")
colors
colors <- trees[[700]]$tip.label %in% c("wPni", "wPpen")
colvec <- rep("black", length=length(trees[[700]]$tip.label))
colvec[which(colors==TRUE)] <- "red"
colvec
plot(trees[[700]], tip.color=colvec))
plot(trees[[700]], tip.color=colvec)
runApp('Documents/R/pbplot')
colvec
runApp('Documents/R/pbplot')
contree1 <- consensus(trees, p=0.5)
contree1
sv <- prop.part(contree1,trees)
contree1
trees
root(contree1,1)
root(contree1,node=1)
root(contree1,node=20)
root(contree1,node=21)
root(contree1,node=25)
root(contree1,outgroup=25)
root(contree1,outgroup=1)
sv <- prop.part(root(contree1,outgroup=1), trees)
plot(root(contree, outgroup=1), show.node.label=TRUE)
plot(root(contree1, outgroup=1), show.node.label=TRUE)
contree <-root(contree1,outgroup=2)
contree
sv <- prop.part(contree, trees)
install.packages("phytools")
library(phytools)
averageTree(trees)
ls.consensus(trees)
plot(ls.consensus(trees))
densityTree(trees)
densityTree(trees, compute.consensus = TRUE)
shiny::runApp('Documents/R/pbplot')
trees1 <- read.tree("~/Desktop/wolb1.treelist")
trees2 <- read.tree("~/Desktop/wolb2.treelist")
plot(ls.consensus(trees))
library(phytools)
plot(ls.consensus(trees1))
nodelabels()
ls.consensus(trees1))
ls.consensus(trees1)
prop.part(trees1)
prop.part(contree,trees1)
contree1 <- consensus(trees1, p=0.5))
contree1 <- consensus(trees1, p=0.5)
contree1
prop.part(contree,trees1)
prop.part(contree1,trees1)
midpoint(contree1)
prop.part(midpoint.root(contree1),trees1)
midpoint.root(contree1)
plot(root(contree1, outgroup=1), show.node.label=TRUE)
prop.part(contree1,midpoint.root(trees1))
midpoint.root(trees1)
prop.part(trees1)
res1 <- prop.part(trees1)
res1
res1 <- prop.part(trees1, trees2)
prop.clades(trees1)
res1 <- prop.clades(trees1, contree1)
res1 <- prop.clades(contree1, trees1)
res1
contree1$node.label <- res1
plot(contree1)
nodelabels()
nodelabels(text=contree1$node.label)
length(trees1)
contree1 <- consensus(trees1[2000:length(trees1)], p=0.5)
sv <- prop.clades(contree1, trees1)
sv
sv <- prop.clades(contree1, trees1[2000:length(trees1)])
trees1 <- trees1[2000:length(trees1)]
contree1 <- consensus(trees1, p=0.5)
sv <- prop.clades(contree1, trees1)
sv
sv/length(trees1)
contree1$nodelabel <- sv/length(trees1)
plot(contree1)
nodelabels()
nodelabels(text=contree1$nodelabel)
plot(contree1)
nodelabels(text=contree1$nodelabel)
plot(contree1)
nodelabels(text=contree1$nodelabel, frame="none")
plot(contree1)
nodelabels(text=contree1$nodelabel, frame="none", adj=c(1,1))
nodelabels(text=contree1$nodelabel, frame="none", adj=c(1,-1))
plot(contree1)
nodelabels(text=contree1$nodelabel, frame="none", adj=c(1,-1))
consensus.edges(trees1,method="least.squares")
contree2 <- consensus.edges(trees1,method="least.squares")
plot(contree2)
contree2
contree1 <- consensus.edges(trees1,method="least.squares")
sv <- prop.clades(contree1, trees1)
contree1$nodelabel <- sv/length(trees1)
plot(contree2)
nodelabels(text=contree1$nodelabel, frame="none", adj=c(1,-1))
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
trees2 <- trees2()[2000:length(trees2())]
trees2 <- read.tree("~/Desktop/wolb2.treelist")
trees2 <- trees2()[2000:length(trees2())]
trees2 <- trees2[2000:length(trees2)]
contree2 <- consensus.edges(trees2,method="least.squares")
sv <- prop.clades(contree2, trees2)
contree2$nodelabel <- sv/length(trees2)
cophylo(contree1, contree2)
plot.cophylo(contree1, contree2)
cophylo(contree1, contree2)
p1 <- cophylo(contree1, contree2)
plot(p1)
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
strsplit("~/Desktop/wolb2.trace", ".trace", fixed=T)
strsplit("~/Desktop/wolb1.treelist", ".treefile", fixed=T)
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
runApp('Documents/R/pbplot')
